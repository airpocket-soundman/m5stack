{"category":"MH_Z19C","color":"#1f935b","blocks":["__MH_Z19C_initMH_Z19C","__MH_Z19C_getData","__MH_Z19C_CO2","__MH_Z19C_temp"],"jscode":"// Block __MH_Z19C_initMH_Z19C\nvar __MH_Z19C_initMH_Z19C_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"initMH_Z19C\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__MH_Z19C_initMH_Z19C'] = {\n    init: function() {\n        this.jsonInit(__MH_Z19C_initMH_Z19C_json);\n    }\n};\n\nwindow['Blockly'].Python['__MH_Z19C_initMH_Z19C'] = function(block) {\n        return `sys.path.append('/flash/res')\nfrom machine import UART\nfrom mh_z19c import MH_Z19C\nmh_z19c = MH_Z19C(1,3)` + \"\\n\";\n};\n\n// Block __MH_Z19C_getData\nvar __MH_Z19C_getData_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"getData\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__MH_Z19C_getData'] = {\n    init: function() {\n        this.jsonInit(__MH_Z19C_getData_json);\n    }\n};\n\nwindow['Blockly'].Python['__MH_Z19C_getData'] = function(block) {\n        return `mh_z19c.read_data()` + \"\\n\";\n};\n\n// Block __MH_Z19C_CO2\nvar __MH_Z19C_CO2_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"CO2\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__MH_Z19C_CO2'] = {\n    init: function() {\n        this.jsonInit(__MH_Z19C_CO2_json);\n    }\n};\n\nwindow['Blockly'].Python['__MH_Z19C_CO2'] = function(block) {\n        return [`mh_z19c.read_co2_conc()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __MH_Z19C_temp\nvar __MH_Z19C_temp_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"temp\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__MH_Z19C_temp'] = {\n    init: function() {\n        this.jsonInit(__MH_Z19C_temp_json);\n    }\n};\n\nwindow['Blockly'].Python['__MH_Z19C_temp'] = function(block) {\n        return [`mh_z19c.read_temp()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","code":{"initMH_Z19C":["window['Blockly'].Python['__MH_Z19C_initMH_Z19C'] = function(block) {\n        return `sys.path.append('/flash/res')\nfrom machine import UART\nfrom mh_z19c import MH_Z19C\nmh_z19c = MH_Z19C(1,3)` + \"\\n\";\n};\n\n","sys.path.append('/flash/res')\nfrom machine import UART\nfrom mh_z19c import MH_Z19C\nmh_z19c = MH_Z19C(1,3)"],"getData":["window['Blockly'].Python['__MH_Z19C_getData'] = function(block) {\n        return `mh_z19c.read_data()` + \"\\n\";\n};\n\n","mh_z19c.read_data()"],"CO2":["window['Blockly'].Python['__MH_Z19C_CO2'] = function(block) {\n        return [`mh_z19c.read_co2_conc()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","mh_z19c.read_co2_conc()"],"temp":["window['Blockly'].Python['__MH_Z19C_temp'] = function(block) {\n        return [`mh_z19c.read_temp()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","mh_z19c.read_temp()"]}}