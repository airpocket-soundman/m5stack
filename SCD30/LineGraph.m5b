{"category":"LineGraph","color":"#4154e1","blocks":["__LineGraph_initGraph","__LineGraph_drawFrame","__LineGraph_drawLine","__LineGraph_deleteLine","__LineGraph_setFrameColor","__LineGraph_setLineColor","__LineGraph_setBgColor","__LineGraph_offsetGraph","__LineGraph_graphArea"],"jscode":"// Block __LineGraph_initGraph\nvar __LineGraph_initGraph_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"initGraph\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_initGraph'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_initGraph_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_initGraph'] = function(block) {\n        return `#init graph parameter\n\n#display size\nwidth = 319\nhight = 239\n\ndataMax = 5000\ndataMin = 0\ndataRange = dataMax - dataMin\nxMax = width\nxMin = 0\nxOffset = 0\nyMax = hight\nyMin = 0\nyOffset = 0\nyRange = yMax - yMin\nlineColor = 0xFF0000\nbgColor = 0x000000\nframeColor = 0xFFFFFF\nlog = [0] * (xMax)` + \"\\n\";\n};\n\n// Block __LineGraph_drawFrame\nvar __LineGraph_drawFrame_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"drawFrame\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_drawFrame'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_drawFrame_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_drawFrame'] = function(block) {\n        return `\n#drawFrame\nlcd.rect(xMin + xOffset, yMin + hight - yRange - yOffset, xMax - xMin, yMax - yMin, color=frameColor)\nxMax -= 2\nyMax -= 2\nxOffset += 1\nyOffset += 1\nyRange = yMax - yMin\nlog = [0] * (xMax)\ndataRange = dataMax - dataMin\n` + \"\\n\";\n};\n\n// Block __LineGraph_drawLine\nvar __LineGraph_drawLine_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"drawLine\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_drawLine'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_drawLine_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_drawLine'] = function(block) {\n        return `\n#drawLine\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1- (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, lineColor)` + \"\\n\";\n};\n\n// Block __LineGraph_deleteLine\nvar __LineGraph_deleteLine_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"deleteLine\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_deleteLine'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_deleteLine_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_deleteLine'] = function(block) {\n        return `\n#deleteLine\ndeleteLog = log.copy()\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - 1 - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1 - (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - 1 - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, bgColor)` + \"\\n\";\n};\n\n// Block __LineGraph_setFrameColor\nvar __LineGraph_setFrameColor_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"setFrameColor\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"setFrameColor\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_setFrameColor'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_setFrameColor_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_setFrameColor'] = function(block) {\n    var setFrameColor = block.getFieldValue('setFrameColor');\n    return `\n#setFrameColor 0x000000 to 0xFFFFFF\nframeColor = ${setFrameColor}` + \"\\n\";\n};\n\n// Block __LineGraph_setLineColor\nvar __LineGraph_setLineColor_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"setLineColor\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"setLineColor\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_setLineColor'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_setLineColor_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_setLineColor'] = function(block) {\n    var setLineColor = block.getFieldValue('setLineColor');\n    return `\n#setLineColor 0x000000 to 0xFFFFFF\nlineColor = ${setLineColor}` + \"\\n\";\n};\n\n// Block __LineGraph_setBgColor\nvar __LineGraph_setBgColor_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"setBgColor\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"setBgColor\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_setBgColor'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_setBgColor_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_setBgColor'] = function(block) {\n    var setBgColor = block.getFieldValue('setBgColor');\n    return `\n#set BackgroundColor 0x000000 to 0xFFFFFF\nbgColor = ${setBgColor}` + \"\\n\";\n};\n\n// Block __LineGraph_offsetGraph\nvar __LineGraph_offsetGraph_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"width\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 319,\n            \"name\": \"width\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"hight\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\":239,\n            \"name\": \"hight\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"xOffset\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"xOffset\"\n        }\n    ],\n    \"message3\": \"%1 %2\",\n    \"args3\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"yOffset\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"yOffset\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_offsetGraph'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_offsetGraph_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_offsetGraph'] = function(block) {\n    var width = block.getFieldValue('width');\nvar hight = block.getFieldValue('hight');\nvar xOffset = block.getFieldValue('xOffset');\nvar yOffset = block.getFieldValue('yOffset');\n    return `\n#set offset parameters\nxMax = ${width}\nyMax = ${hight}\nxOffset = ${xOffset}\nyOffset = ${yOffset}\nyRange = yMax - yMin` + \"\\n\";\n};\n\n// Block __LineGraph_graphArea\nvar __LineGraph_graphArea_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"maxValue\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 10000,\n            \"name\": \"maxValue\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"minValue\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"minValue\"\n        }\n    ],\n    \"colour\": \"#4154e1\"\n};\n\nwindow['Blockly'].Blocks['__LineGraph_graphArea'] = {\n    init: function() {\n        this.jsonInit(__LineGraph_graphArea_json);\n    }\n};\n\nwindow['Blockly'].Python['__LineGraph_graphArea'] = function(block) {\n    var maxValue = block.getFieldValue('maxValue');\nvar minValue = block.getFieldValue('minValue');\n    return `dataMax = ${maxValue}\ndataMin = ${minValue}` + \"\\n\";\n};\n\n","code":{"initGraph":["window['Blockly'].Python['__LineGraph_initGraph'] = function(block) {\n        return `#init graph parameter\n\n#display size\nwidth = 319\nhight = 239\n\ndataMax = 5000\ndataMin = 0\ndataRange = dataMax - dataMin\nxMax = width\nxMin = 0\nxOffset = 0\nyMax = hight\nyMin = 0\nyOffset = 0\nyRange = yMax - yMin\nlineColor = 0xFF0000\nbgColor = 0x000000\nframeColor = 0xFFFFFF\nlog = [0] * (xMax)` + \"\\n\";\n};\n\n","#init graph parameter\n\n#display size\nwidth = 319\nhight = 239\n\ndataMax = 5000\ndataMin = 0\ndataRange = dataMax - dataMin\nxMax = width\nxMin = 0\nxOffset = 0\nyMax = hight\nyMin = 0\nyOffset = 0\nyRange = yMax - yMin\nlineColor = 0xFF0000\nbgColor = 0x000000\nframeColor = 0xFFFFFF\nlog = [0] * (xMax)"],"drawFrame":["window['Blockly'].Python['__LineGraph_drawFrame'] = function(block) {\n        return `\n#drawFrame\nlcd.rect(xMin + xOffset, yMin + hight - yRange - yOffset, xMax - xMin, yMax - yMin, color=frameColor)\nxMax -= 2\nyMax -= 2\nxOffset += 1\nyOffset += 1\nyRange = yMax - yMin\nlog = [0] * (xMax)\ndataRange = dataMax - dataMin\n` + \"\\n\";\n};\n\n","\n#drawFrame\nlcd.rect(xMin + xOffset, yMin + hight - yRange - yOffset, xMax - xMin, yMax - yMin, color=frameColor)\nxMax -= 2\nyMax -= 2\nxOffset += 1\nyOffset += 1\nyRange = yMax - yMin\nlog = [0] * (xMax)\ndataRange = dataMax - dataMin\n"],"drawLine":["window['Blockly'].Python['__LineGraph_drawLine'] = function(block) {\n        return `\n#drawLine\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1- (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, lineColor)` + \"\\n\";\n};\n\n","\n#drawLine\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1- (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, lineColor)"],"deleteLine":["window['Blockly'].Python['__LineGraph_deleteLine'] = function(block) {\n        return `\n#deleteLine\ndeleteLog = log.copy()\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - 1 - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1 - (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - 1 - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, bgColor)` + \"\\n\";\n};\n\n","\n#deleteLine\ndeleteLog = log.copy()\nfor i in range(xMax-1):\n  x1 = i + xOffset\n  y1 = round(hight - 1 - (log[i] - dataMin) / dataRange * yRange - yOffset)\n  if y1 < hight - yRange - yOffset:\n    y1 = hight - yRange - yOffset\n  elif y1 > hight - 1 - yOffset:\n    y1 = hight - 1 - yOffset\n  x2 = i + 1 + xOffset\n  y2 = round(hight - 1 - (log[i + 1] - dataMin) / dataRange * yRange - yOffset)\n  if y2 < hight - yRange - yOffset:\n    y2 = hight - yRange - yOffset\n  elif y2 > hight - 1 - yOffset:\n    y2 = hight - 1 - yOffset\n  lcd.line(x1, y1, x2, y2, bgColor)"],"setFrameColor":["window['Blockly'].Python['__LineGraph_setFrameColor'] = function(block) {\n    var setFrameColor = block.getFieldValue('setFrameColor');\n    return `\n#setFrameColor 0x000000 to 0xFFFFFF\nframeColor = ${setFrameColor}` + \"\\n\";\n};\n\n","\n#setFrameColor 0x000000 to 0xFFFFFF\nframeColor = ${setFrameColor}"],"setLineColor":["window['Blockly'].Python['__LineGraph_setLineColor'] = function(block) {\n    var setLineColor = block.getFieldValue('setLineColor');\n    return `\n#setLineColor 0x000000 to 0xFFFFFF\nlineColor = ${setLineColor}` + \"\\n\";\n};\n\n","\n#setLineColor 0x000000 to 0xFFFFFF\nlineColor = ${setLineColor}"],"setBgColor":["window['Blockly'].Python['__LineGraph_setBgColor'] = function(block) {\n    var setBgColor = block.getFieldValue('setBgColor');\n    return `\n#set BackgroundColor 0x000000 to 0xFFFFFF\nbgColor = ${setBgColor}` + \"\\n\";\n};\n\n","\n#set BackgroundColor 0x000000 to 0xFFFFFF\nbgColor = ${setBgColor}"],"offsetGraph":["window['Blockly'].Python['__LineGraph_offsetGraph'] = function(block) {\n    var width = block.getFieldValue('width');\nvar hight = block.getFieldValue('hight');\nvar xOffset = block.getFieldValue('xOffset');\nvar yOffset = block.getFieldValue('yOffset');\n    return `\n#set offset parameters\nxMax = ${width}\nyMax = ${hight}\nxOffset = ${xOffset}\nyOffset = ${yOffset}\nyRange = yMax - yMin` + \"\\n\";\n};\n\n","\n#set offset parameters\nxMax = ${width}\nyMax = ${hight}\nxOffset = ${xOffset}\nyOffset = ${yOffset}\nyRange = yMax - yMin"],"graphArea":["window['Blockly'].Python['__LineGraph_graphArea'] = function(block) {\n    var maxValue = block.getFieldValue('maxValue');\nvar minValue = block.getFieldValue('minValue');\n    return `dataMax = ${maxValue}\ndataMin = ${minValue}` + \"\\n\";\n};\n\n","dataMax = ${maxValue}\ndataMin = ${minValue}"]}}